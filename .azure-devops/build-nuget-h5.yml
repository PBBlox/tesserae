variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  repo: 'https://$(username):$(pat)@github.com/curiosity-ai/tesserae.git'
  msg: 'update_demo_$(build.buildId)'

trigger:
- h5-master

pool:
  vmImage: 'VS2017-Win2016'

steps:
- checkout: self
  submodules: true
  persistCredentials: true

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  displayName: 'restore nuget'
  inputs:
    restoreSolution: '**/H5.Tesserae.csproj'

# - task: CmdLine@2
  # displayName: 'git config'
  # inputs:
    # script: |
      # git config --global credential.helper store
      # git config --global user.email "$(EMAIL)"
      # git config --global user.name "$(USER)"
      # git config --global user.password  "$(PAT)"

# - task: CmdLine@2
  # displayName: 'update lineawesome'
  # inputs:
    # script: |
      # cd $(Build.SourcesDirectory)/Build.ImportLineAwesome/
      # mkdir FromGit
      # cd FromGit
      # git clone --depth=1 --branch=master  https://github.com/icons8/line-awesome/
      # copy .\line-awesome\dist\line-awesome\fonts\*.eot   ..\..\Tesserae\bridge\assets\fonts\
      # copy .\line-awesome\dist\line-awesome\fonts\*.ttf   ..\..\Tesserae\bridge\assets\fonts\
      # copy .\line-awesome\dist\line-awesome\fonts\*.woff  ..\..\Tesserae\bridge\assets\fonts\
      # copy .\line-awesome\dist\line-awesome\fonts\*.woff2 ..\..\Tesserae\bridge\assets\fonts\
      # copy .\line-awesome\dist\line-awesome\css\line-awesome.min.css ..\..\Tesserae\bridge\assets\css\line-awesome.css
      # cd ..
      # dotnet run
      # rmdir /s .\FromGit\line-awesome /q
      # cd ..
      # git add .
      # git commit -m "Updated line-awesome"
      # git push origin HEAD:h5-master

# This has to run after the git commit above, so the injected source-code stays out of the repository
- task: CmdLine@2
  displayName: 'update samples'
  inputs:
    script: |
      cd $(Build.SourcesDirectory)/Build.InjectSamplesCode/
      dotnet run

- task: VSBuild@1
  displayName: 'build tesserae project'
  inputs:
    solution: '**/H5.Tesserae.csproj'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
# - task: VSBuild@1
  # displayName: 'build tesserae tests project'
  # inputs:
    # solution: '**/Tesserae.Tests.csproj'
    # platform: '$(buildPlatform)'
    # configuration: '$(buildConfiguration)'

# - task: PowerShell@2
  # displayName: 'push tests to gh-pages'
  # inputs:
    # targetType: 'inline'
    # script: |
      # cd "$(Build.SourcesDirectory)/Tesserae.Tests/bin/Any CPU/Release/net461/bridge/"
      # git init
      # git config core.autocrlf true
      # git config core.safecrlf false
      # git config user.email "$(EMAIL)"
      # git config user.name "$(USER)"
      # git checkout -b gh-pages
      # del index.html
      # mv index.min.html index.html
      # git add .
      # git commit -m $(msg)
      # git remote add origin $(repo)
      # git push --set-upstream origin gh-pages --force
    # errorActionPreference: 'continue'
    # ignoreLASTEXITCODE: true

- task: CmdLine@2
  inputs:
    script: 'dir $(Build.SourcesDirectory)\Tesserae\bin\ /S'
    
- task: VSBuild@1
  displayName: 'pack Tesserae'
  inputs:
    solution: '**/H5.Tesserae.csproj'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/t:pack /p:Version=0.0.$(build.buildId)'

- task: CmdLine@2
  inputs:
    script: 'dir $(Build.SourcesDirectory)\*.nupkg /S'

- task: NuGetCommand@2
  displayName: 'push  H5.Tesserae to nuget'
  inputs:
    command: 'push'
    packagesToPush: '**/H5.Tesserae.0.0.$(build.buildId).nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget-curiosity'

# - task: NuGetCommand@2
#   displayName: 'push Tesserae to github'
#   inputs:
#     command: 'push'
#     packagesToPush: '**/Tesserae.0.0.$(build.buildId).nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'nuget-github-packages'